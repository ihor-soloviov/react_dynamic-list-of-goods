{"version":3,"sources":["GoodsList.tsx","api/goods.ts","App.tsx","index.tsx"],"names":["GoodsList","goods","map","good","style","color","name","id","getAll","a","fetch","then","response","json","result","get5First","sort","prev","next","localeCompare","slice","getRedGoods","filter","App","useState","setGoods","getGoods","useCallback","callback","visibleGoods","console","warn","className","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"qPAOaA,EAA6B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACxC,6BACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,oBAEE,UAAQ,OACRC,MAAO,CAAEC,MAAOF,EAAKE,OAHvB,SAKGF,EAAKG,MAJDH,EAAKI,UCNLC,EAAM,uCAAG,4BAAAC,EAAA,sEACCC,MAHV,yEAIRC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAFT,cACdC,EADc,yBAIbA,GAJa,2CAAH,qDAONC,EAAS,uCAAG,4BAAAN,EAAA,sEACFD,IADE,cACjBM,EADiB,yBAGhBA,EAAOE,MAAK,SAACC,EAAMC,GAAP,OACjBD,EAAKX,KAAKa,cAAcD,EAAKZ,SAC5Bc,MAAM,EAAG,IALW,2CAAH,qDAQTC,EAAW,uCAAG,4BAAAZ,EAAA,sEACJD,IADI,cACnBM,EADmB,yBAGlBA,EAAOQ,QAAO,SAAAnB,GAAI,MAAmB,QAAfA,EAAKE,UAHT,2CAAH,qDCTXkB,EAAgB,WAC3B,MAA0BC,mBAAiB,IAA3C,mBAAOvB,EAAP,KAAcwB,EAAd,KAEMC,EAAWC,sBAAW,uCAAC,WAAOC,GAAP,eAAAnB,EAAA,+EAEEmB,IAFF,OAEnBC,EAFmB,OAIzBJ,EAASI,GAJgB,gDAOzBC,QAAQC,KAAR,MAPyB,yDAAD,sDASzB,CAAC9B,IAEJ,OACE,sBAAK+B,UAAU,MAAf,UACE,uDAEA,wBACEC,KAAK,SACL,UAAQ,aACRC,QAAS,kBAAMR,EAASlB,IAH1B,4BAQA,wBACEyB,KAAK,SACL,UAAQ,oBACRC,QAAS,kBAAMR,EAASX,IAH1B,gCAQA,wBACEkB,KAAK,SACL,UAAQ,aACRC,QAAS,kBAAMR,EAASL,IAH1B,4BAQA,cAAC,EAAD,CAAWpB,MAAOA,QClDxBkC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.1df0cf9b.chunk.js","sourcesContent":["import React from 'react';\nimport { Good } from './types/Good';\n\ntype Props = {\n  goods: Good[]\n};\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => (\n  <ul>\n    {goods.map(good => (\n      <li\n        key={good.id}\n        data-cy=\"good\"\n        style={{ color: good.color }}\n      >\n        {good.name}\n      </li>\n    ))}\n  </ul>\n);\n","import { Good } from '../types/Good';\n\n// eslint-disable-next-line\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\n\nexport const getAll = async (): Promise<Good[]> => {\n  const result = await fetch(API_URL)\n    .then(response => response.json());\n\n  return result;\n};\n\nexport const get5First = async () => {\n  const result = await getAll();\n\n  return result.sort((prev, next) => (\n    prev.name.localeCompare(next.name)))\n    .slice(0, 5);\n};\n\nexport const getRedGoods = async () => {\n  const result = await getAll();\n\n  return result.filter(good => good.color === 'red');\n};\n","import React, { useState, useCallback } from 'react';\nimport './App.scss';\nimport { GoodsList } from './GoodsList';\nimport { Good } from './types/Good';\n\nimport {\n  getAll,\n  get5First,\n  getRedGoods,\n} from './api/goods';\n\nexport const App: React.FC = () => {\n  const [goods, setGoods] = useState<Good[]>([]);\n\n  const getGoods = useCallback(async (callback: () => Promise<Good[]>) => {\n    try {\n      const visibleGoods = await callback();\n\n      setGoods(visibleGoods);\n    } catch (error) {\n      /* eslint-disable no-console */\n      console.warn(error);\n    }\n  }, [goods]);\n\n  return (\n    <div className=\"App\">\n      <h1>Dynamic list of Goods</h1>\n\n      <button\n        type=\"button\"\n        data-cy=\"all-button\"\n        onClick={() => getGoods(getAll)}\n      >\n        Load all goods\n      </button>\n\n      <button\n        type=\"button\"\n        data-cy=\"first-five-button\"\n        onClick={() => getGoods(get5First)}\n      >\n        Load 5 first goods\n      </button>\n\n      <button\n        type=\"button\"\n        data-cy=\"red-button\"\n        onClick={() => getGoods(getRedGoods)}\n      >\n        Load red goods\n      </button>\n\n      <GoodsList goods={goods} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}